#ifndef TON_H
#define TON_H

#include <chrono>


/* -----------------------------------------------------------------------------------------
 * Timer on Delay
 * *** 4 objects: IN, PT, Q, ET :
 * *** Q 	- is TRUE, PT millisecondss after IN had a rising edge
 * *** IN 	- starts timer with rising edge, resets timer with falling edge
 * *** PT 	- time to pass, before Q is set
 * *** ET 	- elapsed time
 * -----------------------------------------------------------------------------------------
 */
class TON {
public:
	/* -------------------------------------------------------------------------------------
	 * Sets internal vars
	 * -------------------------------------------------------------------------------------
	 * */
	TON();

	/* -------------------------------------------------------------------------------------
	 * Sets PT (in ms) and starts timer with IN = true
	 * -------------------------------------------------------------------------------------
	 * */
	void start(long long int _PT, bool _IN = true);

	/* -------------------------------------------------------------------------------------
	 * Stops timer with IN = false, Q = false
	 * -------------------------------------------------------------------------------------
	 * */
	void reset();

	/* -------------------------------------------------------------------------------------
	 * Return time since start in ms
	 * -------------------------------------------------------------------------------------
	 * */
	long long int since();

	/* -------------------------------------------------------------------------------------
	 * Return state of Q
	 * -------------------------------------------------------------------------------------
	 * */
	bool check();

private:
	/* -------------------------------------------------------------------------------------
	 * -------------------------------------------------------------------------------------
	 * */
	std::chrono::milliseconds _ET, _PT, _stT;

	/* -------------------------------------------------------------------------------------
	 * -------------------------------------------------------------------------------------
	 * */
	bool _Q, _IN;
};

#endif
