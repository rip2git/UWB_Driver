#ifndef USERPACK_H_
#define USERPACK_H_


#include "_DEBUG.h"
#include <stdint.h>
#include <vector>


#ifdef UserPack_DEBUG_MODE
#include <fstream>
#endif



/*! ----------------------------------------------------------------------------------------
 * @brief:
 * -----------------------------------------------------------------------------------------
 * */
struct UserPack {
	/*! ------------------------------------------------------------------------------------
	 * @brief: Commands from user to firmware
	 *
	 * NOTE: if error is occurred, then
	 *
	 * -------------------------------------------------------------------------------------
	 * */
	enum class FCommand : uint8_t {
		Error = 0,
		SetConfig,
		Distance,
		Data
	};

	/*! ------------------------------------------------------------------------------------
	 * @brief:
	 * -------------------------------------------------------------------------------------
	 * */
	union SCommand {
		uint8_t _raw;
		uint8_t DeviceID;
		FCommand Cmd;

		SCommand& operator=(uint8_t id) {
			DeviceID = id;
			return *this;
		}
		SCommand& operator=(FCommand cmd) {
			Cmd = cmd;
			return *this;
		}
		bool operator==(SCommand& scmd) {
			return (this->_raw == scmd._raw);
		}
		operator uint8_t() const {
			return _raw;
		}
		operator FCommand() const {
			return Cmd;
		}
	};

	/*! ------------------------------------------------------------------------------------
	 * @brief:
	 * -------------------------------------------------------------------------------------
	 * */
	static const uint8_t BROADCAST_ID = 0xFF;

	/*! ------------------------------------------------------------------------------------
	 * @brief:
	 * -------------------------------------------------------------------------------------
	 * */
	FCommand FCmd;
	SCommand SCmd;
	std::vector <uint8_t> Data;

	/*! ------------------------------------------------------------------------------------
	 * @brief:
	 * -------------------------------------------------------------------------------------
	 * */
	virtual void ToBytes(std::vector <uint8_t> &buffer) const = 0;

	/*! ------------------------------------------------------------------------------------
	 * @brief:
	 * -------------------------------------------------------------------------------------
	 * */
	virtual void ToStruct(const std::vector <uint8_t> &buffer) = 0;

	/*! ------------------------------------------------------------------------------------
	 * @brief:
	 * -------------------------------------------------------------------------------------
	 * */
	virtual void SetData(const std::vector <uint8_t> &buffer) = 0;

	/*! ------------------------------------------------------------------------------------
	 * @brief:
	 * -------------------------------------------------------------------------------------
	 * */
	virtual void Reset() = 0;

#ifdef UserPack_DEBUG_MODE
	/*! ------------------------------------------------------------------------------------
	 * @brief:
	 * -------------------------------------------------------------------------------------
	 * */
	virtual void Print(std::ostream &os) const = 0;
#endif

	virtual ~UserPack() {};
};



#endif /* USERPACK_H_ */
