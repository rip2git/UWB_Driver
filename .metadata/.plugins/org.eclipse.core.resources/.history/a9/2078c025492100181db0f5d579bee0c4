#include "UserPack.h"


uint16 UserPack::ToBytes(uint8 *buffer) const
{
	uint16 i = 0;
	buffer[i++] = static_cast <uint8> (this->Command);
	buffer[i++] = this->DestinationID;
	buffer[i++] = this->TotalSize;
	for (unsigned int j = 0; j < this->TotalSize; ++j)
		buffer[i++] = this->Data[j];
	return i;
}



void UserPack::ToStruct(const uint8 *buffer)
{
	unsigned int i = 0;
	this->Command = static_cast <UserPack::COMMAND> (buffer[i++]);
	this->DestinationID = buffer[i++];
	this->TotalSize = buffer[i++];
	for (unsigned int j = 0; j < this->TotalSize; ++j)
		this->Data[j] = buffer[i++];
}



#ifdef DEBUG_MODE
#include <iostream>
using std::cout;
using std::endl;
using std::hex;
using std::dec;
void UserPack::Print() const
{
	cout << "Command: " << static_cast <int> (this->Command) << endl;
	cout << "DestinationID: " << static_cast <int> (this->DestinationID) << endl;
	cout << "TotalSize: " << static_cast <int> (this->TotalSize) << endl;
	cout << "Data: ";
	for (unsigned int i = 0; i < this->TotalSize; ++i)
		cout << hex << static_cast <int> (this->Data[i]) << dec << ",";
	cout << endl;
}
#endif
