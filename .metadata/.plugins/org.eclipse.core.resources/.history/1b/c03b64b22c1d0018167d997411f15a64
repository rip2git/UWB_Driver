
#include "main.h"
#include "COMPort.h"

/// linker, misc
/// -static-libgcc -static-libstdc++

//#define poll


int main() {
	unsigned long long old_t1;
	unsigned char buf[50];
	string str;
	size_t rdb;
	char pn[4];
	int mode;
	TON t0, t1;

	cout << "com name:" << endl;
	cin >> pn;

	COMPort::InitializationStruct init_str;
	init_str.baudRate = 115200;
	init_str.portName = pn;
	init_str.timeOut.Ms = 0;
	init_str.timeOut.nChars = 0;
	COMPort port(&init_str);

	if (port.GetState() == COMPort::OPENED)
		cout << "opened" << endl;
	else
		cout << "error" << endl;

	t0.start(0);
	t1.start(0);


	while (1) {

		old_t1 = t1.since();
		rdb = port.Read(buf, 3);

			cout << buf[0] << buf[1] << buf[3] << " ";
			cout << t0.since() << " ms" << endl;
			cout << t1.since() - old_t1 << " ms" << endl;

	}

	return 0;
}

/*

int main() {
	string str;
	char pn[4];
	int mode;
	TON t1;

	cout << "com name:" << endl;
	cin >> pn;
	cout << "mode 1-poll, 2-resp" << endl;
	cin >> mode;

	COMPort::InitializationStruct init_str;
	init_str.baudRate = 115200;
	init_str.portName = pn;
	init_str.timeOut.Ms = 1000;
	init_str.timeOut.nChars = 0;
	COMPort port(&init_str);

	if (port.GetState() == COMPort::OPENED)
		cout << "opened" << endl;
	else
		cout << "error" << endl;

	unsigned long long old_t1;
	unsigned char buf[50];
	int distance;
	char n[10];
	n[9] = '\0';
	size_t rdb;
	int mainstate = 0;

if  (mode == 1) {
	while (1) {

		switch (mainstate) {
			case 0: {
				cout << "enter ID" << endl;
				cin >> n[0];
				n[0] &= 0x0F;
				n[1] = 0;
				port.Write(n);
				port.Read(buf, 3);
				buf[3] = 0;
				cout << buf << endl;
				memcpy(n, "023456789", 9);
				mainstate = 2;
			} break;
			case 1: {

				mainstate = 2;
			} break;
			case 2: {
				Sleep(490);
				port.Write(n);
				cout << "sended" << endl;
				rdb = port.Read(buf, 9);
				if (rdb != 0) {
					distance = buf[7] + buf[8] * 256;
					cout << t1.since() - old_t1 << endl;
					cout << distance << " cm" << endl;
					cout << endl;
				}
			} break;
			case 3: {

			} break;
		}
	}

} else {
	while (1) {

			switch (mainstate) {
				case 0: {
					cout << "enter ID" << endl;
					cin >> n[0];
					n[0] &= 0x0F;
					n[1] = 0;
					port.Write(n);
					port.Read(buf, 3);
					buf[3] = 0;
					cout << buf << endl;
					mainstate = 2;
				} break;
				case 1: {

					mainstate = 2;
				} break;
				case 2: {
					t1.start(0);
					old_t1 = t1.since();
					mainstate = 3;
				} break;
				case 3: {
					rdb = port.Read(buf, 9);
					if (rdb != 0) {
						distance = buf[7] + buf[8] * 256;
						cout << t1.since() - old_t1 << endl;
						cout << distance << " cm" << endl;
						cout << endl;
					}
					mainstate = 2;
				} break;
			}
		}

}

	return 0;
}*/
